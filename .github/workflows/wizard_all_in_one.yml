on:
  workflow_call:
    inputs:
      docker_file:
        type: string
        default: 'docker/images/dev/Dockerfile'
        required: false
      env_file:
        type: string
        default: '.env'
        required: false
      do_build:
        type: boolean
        default: true
        required: false
      do_build_push:
        type: boolean
        default: true
        required: false
      do_deploy:
        type: boolean
        default: true
        required: false
    secrets:
      env_vars:
        required: false

jobs:
  setup:
    runs-on: apifornia-builder
    outputs:
      CALLER_REPO_NAME: ${{ steps.setup.outputs.CALLER_REPO_NAME }}
      DEPLOY_RUNNER: ${{ steps.setup.outputs.DEPLOY_RUNNER }}
      EXTRA_TAG: ${{ steps.setup.outputs.EXTRA_TAG }}
    steps:
      - id: setup
        name: Setup
        uses: apifornia/github-actions/setup-logic@main

  build-common:
    runs-on: apifornia-builder
    needs: setup
    if: "${{ inputs.do_build == true }}"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Generate .env file
        run: echo "${{ secrets.env_vars }}" > ${{ inputs.env_file }}
      
      - name: Build Common
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./common/docker/images/dev/Dockerfile
          push: false
          tags: ${{ needs.setup.outputs.CALLER_REPO_NAME }}-common
          
  pre-tests:
    runs-on: apifornia-builder
    needs: [setup,build-common]
    if: "${{ inputs.do_build == true }}"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Generate .env file
        run: echo "${{ secrets.env_vars }}" > ${{ inputs.env_file }}
      
      - name: Start common
        run: >
          /usr/bin/docker compose
          -p ${{ needs.setup.outputs.CALLER_REPO_NAME }}-tests
          -f ./common/docker/compose/tests/docker-compose.yml
          --env-file ${{ inputs.env_file }}
          up -d

      - name: Build Chamber
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./chamber/docker/images/dev/Dockerfile
          push: false
          tags: ${{ needs.setup.outputs.CALLER_REPO_NAME }}-chamber

      - name: Build Spelloom
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./spelloom/docker/images/dev/Dockerfile
          push: false
          tags: ${{ needs.setup.outputs.CALLER_REPO_NAME }}-spelloom

      - name: Start Chamber
        env:
          IMAGE_NAME: ${{ needs.setup.outputs.CALLER_REPO_NAME }}-chamber
        run: >
          /usr/bin/docker compose
          -p ${{ needs.setup.outputs.CALLER_REPO_NAME }}-chamber
          -f ./chamber/docker/compose/dev/docker-compose.yml
          --env-file ${{ inputs.env_file }}
          up --detach

      - name: Start Spelloom
        env:
          IMAGE_NAME: ${{ needs.setup.outputs.CALLER_REPO_NAME }}-spelloom
        run: >
          /usr/bin/docker compose
          -p ${{ needs.setup.outputs.CALLER_REPO_NAME }}-spelloom
          -f ./spelloom/docker/compose/dev/docker-compose.yml
          --env-file ${{ inputs.env_file }}
          up --detach
          
  tests:
    needs: [setup,pre-tests]
    runs-on: apifornia-builder
    if: "${{ inputs.do_build == true }}"
    strategy:
      matrix:
        sub_project: [ chamber, spelloom ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Generate .env file
        run: echo "${{ secrets.env_vars }}" > ${{ inputs.env_file }}
      
      - name: Build tests - ${{ matrix.sub_project }}
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./${{ matrix.sub_project }}/docker/images/tests/Dockerfile
          push: false
          tags: ${{ needs.setup.outputs.CALLER_REPO_NAME }}-${{ matrix.sub_project }}-tests
          
      - name: Start test - ${{ matrix.sub_project }}
        env:
          IMAGE_NAME: ${{ needs.setup.outputs.CALLER_REPO_NAME }}-${{ matrix.sub_project }}-tests
        run: >
          /usr/bin/docker compose
          -p ${{ needs.setup.outputs.CALLER_REPO_NAME }}-${{ matrix.sub_project }}-tests
          -f ./${{ matrix.sub_project }}/docker/compose/tests/docker-compose.yml
          --env-file ${{ inputs.env_file }}
          up
          
  post-tests:
    runs-on: apifornia-builder
    if: ${{ always() }}
    needs: [setup,tests]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Generate .env file
        run: echo "${{ secrets.env_vars }}" > ${{ inputs.env_file }}
      
      - name: Stop common
        run: >
          /usr/bin/docker compose
          -p wizard-tests
          -f ./common/docker/compose/tests/docker-compose.yml
          --env-file ${{ inputs.env_file }}
          down || true
          
      - name: Stop - chamber
        env:
          IMAGE_NAME: ${{ needs.setup.outputs.CALLER_REPO_NAME }}-${{ matrix.sub_project }}
        run: >
          /usr/bin/docker compose
          -p wizard-chamber
          -f ./chamber/docker/compose/dev/docker-compose.yml
          --env-file ${{ inputs.env_file }}
          down || true
          
      - name: Stop - spelloom
        env:
          IMAGE_NAME: ${{ needs.setup.outputs.CALLER_REPO_NAME }}-${{ matrix.sub_project }}
        run: >
          /usr/bin/docker compose
          -p wizard-spelloom
          -f ./spelloom/docker/compose/dev/docker-compose.yml
          --env-file ${{ inputs.env_file }}
          down || true

  push:
    runs-on: apifornia-builder
    if: "${{ inputs.do_deploy == true }}"
    needs: [setup,post-tests]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Generate .env file
        run: echo "${{ secrets.env_vars }}" > ${{ inputs.env_file }}
        
      - name: Docker metadata Chamber
        id: meta-chamber
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}-chamber
          tags: |
            type=raw,value=${{ github.sha }}
            type=raw,value=${{ needs.setup.outputs.EXTRA_TAG }}
            
      - name: Docker metadata Spelloom
        id: meta-spelloom
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}-spelloom
          tags: |
            type=raw,value=${{ github.sha }}
            type=raw,value=${{ needs.setup.outputs.EXTRA_TAG }}
            
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Push Chamber
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./chamber/docker/images/dev/Dockerfile
          push: true
          tags: ${{ steps.meta-chamber.outputs.tags }}
          
      - name: Push Spelloom
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./spelloom/docker/images/dev/Dockerfile
          push: true
          tags: ${{ steps.meta-spelloom.outputs.tags }}
          
      - name: Cleanup
        run: |
          docker image rm -f ${{ steps.meta-chamber.outputs.tags }} || true
          docker image rm -f ${{ steps.meta-spelloom.outputs.tags }} || true

  compose-up:
    needs: [setup,push]
    runs-on: ${{ needs.setup.outputs.DEPLOY_RUNNER }}
    if: "${{ inputs.do_deploy == true }}"
    strategy:
      matrix:
        sub_project: [ chamber, spelloom ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Generate .env file
        run: echo "${{ secrets.env_vars }}" > ${{ inputs.env_file }}
      
      - name: Login to Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Docker metadata - ${{ matrix.sub_project }}
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}-${{ matrix.sub_project }}
          tags: |
            type=raw,value=${{ github.sha }}

      - name: Lint and show compose manifest - ${{ matrix.sub_project }}
        env:
          IMAGE_NAME: ${{ steps.meta.outputs.tags }}
        run: >
          /usr/bin/docker compose
          -p ${{ needs.setup.outputs.CALLER_REPO_NAME }}-${{ matrix.sub_project }}
          -f ./${{ matrix.sub_project }}/docker/compose/dev/docker-compose.yml
          --env-file ${{ inputs.env_file }}
          convert
      
      - name: Pre-pull new Docker-image - ${{ matrix.sub_project }}
        env:
          IMAGE_NAME: ${{ steps.meta.outputs.tags }}
        run: >
          /usr/bin/docker compose
          -p ${{ needs.setup.outputs.CALLER_REPO_NAME }}-${{ matrix.sub_project }}
          -f ./${{ matrix.sub_project }}/docker/compose/dev/docker-compose.yml
          --env-file ${{ inputs.env_file }}
          pull --quiet
         
      - name: Update and start - ${{ matrix.sub_project }}
        env:
          IMAGE_NAME: ${{ steps.meta.outputs.tags }}
        run: >
          env && /usr/bin/docker compose
          -p ${{ needs.setup.outputs.CALLER_REPO_NAME }}-${{ matrix.sub_project }}
          -f ./${{ matrix.sub_project }}/docker/compose/dev/docker-compose.yml
          --env-file ${{ inputs.env_file }}
          up --detach

  # notify:
  #   runs-on: apifornia-builder
  # deploy-lint:
  #   needs: [setup,build]
  #   runs-on: ${{ needs.setup.outputs.RUNNER }}
  #   steps:
  #     - name: Compose Lint
  #       run: |
  #         /usr/local/bin/docker compose
  #         --project-name ${CI_PROJECT_NAME}
  #         --project-directory ${CI_APPLICATION_PATH:-/srv/app}/${CI_PROJECT_NAME}
  #         --file ${BUILD_DOCKER_COMPOSEFILE:-docker-compose.yml}
  #         config
