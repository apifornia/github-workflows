on:
  workflow_call:
    secrets:
      gh_token:
        required: true

jobs:
  # =====
  # SETUP
  # =====
  setup:
    runs-on: apifornia-builder
    outputs:
      CALLER_REPO_NAME: ${{ steps.setup.outputs.CALLER_REPO_NAME }}
      PR_NUMBER: ${{ steps.setup.outputs.PR_NUMBER }}
      PR_ID: ${{ steps.setup.outputs.PR_ID }}
      TEST_USER: ${{ steps.setup.outputs.TEST_USER }}
      TEST_PASSWORD: ${{ steps.setup.outputs.TEST_PASSWORD }}
    steps:
      - id: setup
        name: Configuration setup
        run: |
            env
            echo ======================================
            
            REPOSITORY_NAME=(${GITHUB_REPOSITORY//\// })
            REF_NAME=(${GITHUB_REF_NAME//\// })
            TEST_USER=(user_$((1 + $RANDOM % 10000))@test.net)
            TEST_PASSWORD=(tr -dc 'A-Za-z0-9!?%=' < /dev/urandom | head -c 20)
            
            echo Caller repo: ${REPOSITORY_NAME[1]}
            echo PR number: ${REF_NAME[0]}
            echo Test user: $TEST_USER
            echo Password: $TEST_PASSWORD
            
            echo "CALLER_REPO_NAME=${REPOSITORY_NAME[1]}" >> $GITHUB_OUTPUT
            echo "PR_NUMBER=${REF_NAME[0]}" >> $GITHUB_OUTPUT
            echo "PR_ID=pr-${REPOSITORY_NAME[1]}-${REF_NAME[0]}" >> $GITHUB_OUTPUT
            echo "TEST_USER=${TEST_USER}" >> $GITHUB_OUTPUT
            echo "TEST_PASSWORD=${TEST_PASSWORD}" >> $GITHUB_OUTPUT
  
  # ================
  # INFRA deployment
  # ================
  infra:
    needs: [setup]
    runs-on: apifornia-builder
    strategy:
      matrix:
        app:
          - kafka
          - mongo
          - postgres
          - redis
    steps:
      - name: Clone infra
        uses: actions/checkout@v4
        with:
          repository: apifornia/infrastructure
          #ref: main
          path: ${{ matrix.app }}
          token: ${{ secrets.gh_token }}
      - name: Update and run ${{ matrix.app }}
        run: |
          echo app: ${{ matrix.app }}
          cd ${{ matrix.app }}/docker-compose/pr/${{ matrix.app }}
          pwd
          ls -lah
          
          echo Setting unique id
          sed -i 's/<pr-id>/${{ needs.setup.outputs.PR_ID }}/' docker-compose.yml
          
          echo Removing old containers
          docker compose down || true
          
          echo Starting service
          docker compose up -d
  
  # ===============
  # APPS deployment
  # ===============
  apps:
    needs: [setup,infra]
    runs-on: apifornia-builder
    strategy:
      max-parallel: 1
      matrix:
        include:
          - app: flow-core
            folder: docker/compose/pr
            suffix: _
          - app: worker-rust
            folder: docker/compose/pr
            suffix: _
          - app: wizard
            folder: chamber/docker/compose/pr
            suffix: chamber
          - app: wizard
            folder: spelloom/docker/compose/pr
            suffix: spelloom
          - app: flow-editor-vue3
            folder: docker/compose/pr
            suffix: _
    steps:
      - name: Clone ${{ matrix.app }}
        uses: actions/checkout@v4
        with:
          repository: apifornia/${{ matrix.app }}
          ref: pr
          path: ${{ matrix.app }}_${{ matrix.suffix }}
          token: ${{ secrets.gh_token }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: github
          password: ${{ secrets.gh_token }}
      - name: Update and run ${{ matrix.app }}
        run: |
          echo app: ${{ matrix.app }}
          echo folder: ${{ matrix.app }}
          echo suffix: ${{ matrix.suffix }}
          echo =============================================
          cd ${{ matrix.app }}_${{ matrix.suffix }}/${{ matrix.folder }}
          pwd
          
          echo Get env vars:
          echo  "${{ secrets.gh_token }}" | gh auth login --with-token
          gh variable get PR --repo apifornia/${{ matrix.app }} > .env
          ls -lah

          echo Setting unique id
          sed -i 's/<pr-id>/${{ needs.setup.outputs.PR_ID }}/' docker-compose.yml
          sed -i 's/<pr-id>/${{ needs.setup.outputs.PR_ID }}/' .env
          
          echo Removing old containers
          docker compose down || true
          
          echo Starting service
          docker compose pull
          docker compose up -d

  tests:
    needs: [setup,infra,apps]
    runs-on: apifornia-builder
    steps:
      - name: Create user
        run: |
          docker run --rm --network private  curlimages/curl:latest \
          curl -v -X POST 'http://${{ needs.setup.outputs.PR_ID }}-flow-core:3002/auth/register' -H 'Content-Type: application/json' -d '{"email": "${{ needs.setup.outputs.TEST_USER }}","password": "${{ needs.setup.outputs.TEST_PASSWORD }}"}'
      - name: Wait 1 min
        run: |
          pwd
          while :
          do 
            if [[ -e ./stop.txt ]]; then
              echo "Exiting"
              rm stop.txt
              exit 0
            fi
            echo "Waiting for stop.txt"
            sleep 1m
          done
  
  # ============
  # APPS cleanup
  # ============
  wipe-apps:
    needs: [setup,infra,apps,tests]
    if: ${{ always() }}
    runs-on: apifornia-builder
    strategy:
      #max-parallel: 1
      matrix:
        include:
          - app: flow-core
            folder: docker/compose/pr
            suffix: _
          - app: worker-rust
            folder: docker/compose/pr
            suffix: _
          - app: wizard
            folder: chamber/docker/compose/pr
            suffix: chamber
          - app: wizard
            folder: spelloom/docker/compose/pr
            suffix: spelloom
          - app: flow-editor-vue3
            folder: docker/compose/pr
            suffix: _
    steps:
      - name: Clone ${{ matrix.app }}
        uses: actions/checkout@v4
        with:
          repository: apifornia/${{ matrix.app }}
          ref: pr
          path: ${{ matrix.app }}_${{ matrix.suffix }}
          token: ${{ secrets.gh_token }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: github
          password: ${{ secrets.gh_token }}
      - name: Cleanup ${{ matrix.app }}
        run: |
          echo app: ${{ matrix.app }}
          echo folder: ${{ matrix.app }}
          echo suffix: ${{ matrix.suffix }}
          echo =============================================
          cd ${{ matrix.app }}_${{ matrix.suffix }}/${{ matrix.folder }}
          pwd
          
          echo Get env vars:
          echo  "${{ secrets.gh_token }}" | gh auth login --with-token
          gh variable get PR --repo apifornia/${{ matrix.app }} > .env
          ls -lah
          
          echo Setting unique id
          sed -i 's/<pr-id>/${{ needs.setup.outputs.PR_ID }}/' docker-compose.yml
          
          echo Cleanup ${{ matrix.app }}
          docker compose down || true

  # =============
  # INFRA cleanup
  # =============
  wipe-infra:
    needs: [setup,infra,apps,tests,wipe-apps]
    if: ${{ always() }}
    runs-on: apifornia-builder
    strategy:
      matrix:
        app:
          - kafka
          - mongo
          - postgres
          - redis
    steps:
      - name: Clone infra
        uses: actions/checkout@v4
        with:
          repository: apifornia/infrastructure
          #ref: main
          path: ${{ matrix.app }}
          token: ${{ secrets.gh_token }}
      - name: Cleanup ${{ matrix.app }}
        run: |
          echo app: ${{ matrix.app }}
          cd ${{ matrix.app }}/docker-compose/pr/${{ matrix.app }}
          pwd
          ls -lah
          
          echo Setting unique id
          sed -i 's/<pr-id>/${{ needs.setup.outputs.PR_ID }}/' docker-compose.yml
          
          echo Cleanup ${{ matrix.app }}
          docker compose down || true
